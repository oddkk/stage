mod message;

int     := base.int;
String  := base.String;
Unit    := base.Unit;
Type    := base.Type;
IO      := base.IO;

DBConnectionHandle := base.int;

_dbConnect := (kind: String, conStr: String) -> IO[DBConnectionHandle]
	@native("sql_db_connect");

Connection := Struct {
	dbKind: String;
	connectionString: String;
	_handle: DBConnectionHandle;
	# TODO: Fix binds from non-overridable members conflicting with implicit
	# binds.
	# = _dbConnect(dbKind, connectionString);
};

Query := [ParamsType: Type] Struct {
	stmt: String;
	params: ParamsType;
};

sql := (a: String, parameters: T) -> Query[$T]
	=> Query[T] { stmt = a; params = parameters; };


query := (db: Connection, q: Query[$T]) -> IO[$U]
	=> ((db: DBConnectionHandle,
		query: String,
		paramType: Type,
		resultType: Type) -> IO[U]
			@native("sql_db_query"))(db._handle, q.stmt, T, U);
