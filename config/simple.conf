version 0.1.0;

device midi.novation.launchpad lp;

lp.button_color[..][..].red   <- lp.button_down[0][0]; #button_down[..][..];
lp.button_color[..4][..].green <- lp.button_down[4..][..];
lp.button_color[4..][..].green <- lp.button_down[..4][..];

device constant tgl_threshold { value = 1; }
device constant tgl_on        { value = 3; }
device constant tgl_off       { value = 0; }
device blink blk;

type color = (
	 red:   int,
	 green: int,
	 blue:  int
);

type asdf = (int, color);

device toggle tgl {
	on_value  <- blk.out;
	off_value <- tgl_off.out;

	threshold <- tgl_threshold.out;

	in <- lp.button_down[0][0];

	#lp.button_color[..][..].green <- out;

	#lp.button_color[0][0].red   <- out;
	#lp.button_color[0][1].green <- out;
	#lp.button_color[0][2].red   <- out;
}

device ease {
	in <- tgl.out;
	#lp.button_color[0][0].red <- out;
	#lp.button_color[0][1].green <- out;
	#lp.button_color[0][2].red <- out;
}



































# # device_type test {
# # 	attr a1: color;
# # }

# # device test t1 {
# # 	a1.red = 3;
# # 	a1.blue = 1;
# # }

# # device constant c {
# # 	# T = int;
# # 	value = 3;
# # }

# # device debug_print p {
# # 	T = int;
# # 	in <- c.out;
# # }


# device debug_print print {
# 	T = int;

# 	in <- foo.tgl2;
# }

# device_type rgb_led_can {
# 	input default col: color;

# 	device constant asdf {
# 		value = 2;
# 	}

# 	col.red <- asdf;

# 	device debug_print print {
# 		T = color;
# 	}

# 	print <- col;
# }

# device rgb_led_can can1 {}

# device debug_print can1_print {
# 	T = color;
# 	in <- can1.col;
# }

# device rgb_led_can can2 {}

# device debug_print test_print {
# 	T = int;
# 	in <- can1.color.red;
# }

# device_type test_type {
# 	device constant c1 { value = 9; }
# 	device constant c2 { value = 2; }

# 	device add a {
# 		left  <- c1;
# 		right <- c2;
# 	}

# 	device debug_print tt_print {
# 		T = int;
# 		in <- a;
# 	}


# 	output default out: int;

# 	out <- a;
# }

# device test_type test_dev {}
# device test_type test_dev2 {}

# device constant const1 {
# 	value = 3;
# }

# device constant const2 {
# 	value = 5;
# }

# device_type foo {
# 	attr asdf: int = const1.value;

# 	# attr asdf: int = const1.value;
# 	attr foo1: int = 2;
# 	attr foo2: int = 2;

# 	# foo1 = foo2;
# 	# foo2 = foo1;

# 	device constant a {
# 		value = asdf;
# 	}
# 	output default out: int;
# 	out <- a;
# }

# device foo asdfasdf {}

# device debug_print ext_print {
# 	T = int;
# 	in <- asdfasdf;
# }

# device add test {
# 	left <- const2;
# 	right <- test_dev;
# }

# device debug_print final_print {
# 	T = int;
# 	in <- test;
# }
