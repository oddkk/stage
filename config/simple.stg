# Bool :: Enum { true, false }
# Foo :: (asdf: Bool, fdsa: (foo: int, bar: str));

# foo : Foo = (Bool.false, (3, "asdf"));

# asdf = foo.fdsa.bar;

two = 2;
four = 2 + 2;
some_number = 2 * 3 + 5 - 6 + print(four());

# print <- some_number;

# foo = print(some_number);

# some_string = "foo";
# some_string2 = "foo" + "bar";

# op*(lhs: int, rhs: int) -> int;

# square(x: int) = x * x;
# double(x: int) -> int = 2 * x;
# double(x: (int, Bool)) = 2 * x;

# assert square(2) == 4;
# assert some_number == 5;
