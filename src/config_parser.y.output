Grammar

    0 $accept: module END

    1 module: "version" NUMLIT '.' NUMLIT '.' NUMLIT ';' module_stmt_list

    2 module_stmt_list: module_stmt_list module_stmt
    3                 | %empty

    4 module_stmt: device_type
    5            | device
    6            | type_decl

    7 device_type: "device_type" IDENTIFIER '{' device_type_body '}'

    8 device_type_body: device_type_body device_type_body_stmt
    9                 | %empty

   10 device_type_body_stmt: "input" channel_name ':' type ';'
   11                      | "output" channel_name ':' type ';'
   12                      | "attr" IDENTIFIER ':' type ';'
   13                      | "attr" IDENTIFIER ':' type '=' expr ';'
   14                      | l_expr "<-" l_expr ';'
   15                      | device
   16                      | type_decl

   17 device: "device" l_expr '{' device_body '}'
   18       | "device" l_expr IDENTIFIER '{' device_body '}'

   19 device_body: device_body device_body_stmt
   20            | %empty

   21 device_body_stmt: l_expr '=' expr ';'
   22                 | l_expr "<-" l_expr ';'

   23 channel_name: IDENTIFIER
   24             | '_'

   25 l_expr: IDENTIFIER
   26       | '_'
   27       | l_expr '.' l_expr
   28       | l_expr '[' expr ']'
   29       | l_expr '[' range ']'

   30 type_decl: "type" IDENTIFIER '=' type ';'

   31 type: l_expr
   32     | "type"
   33     | l_expr '{' range '}'
   34     | '{' enum_list '}'

   35 enum_list: enum_label
   36          | enum_list ',' enum_label

   37 enum_label: IDENTIFIER

   38 range: expr ".." expr

   39 expr: NUMLIT
   40     | IDENTIFIER
   41     | expr '.' expr
   42     | expr '+' expr
   43     | expr '-' expr
   44     | expr '*' expr
   45     | expr '/' expr
   46     | expr '[' expr ']'
   47     | expr '[' range ']'


Terminals, with rules where they appear

END (0) 0
'*' (42) 44
'+' (43) 42
',' (44) 36
'-' (45) 43
'.' (46) 1 27 41
'/' (47) 45
':' (58) 10 11 12 13
';' (59) 1 10 11 12 13 14 21 22 30
'=' (61) 13 21 30
'[' (91) 28 29 46 47
']' (93) 28 29 46 47
'_' (95) 24 26
'{' (123) 7 17 18 33 34
'}' (125) 7 17 18 33 34
error (256)
"device_type" (258) 7
"device" (259) 17 18
"type" (260) 30 32
"input" (261) 10
"output" (262) 11
"attr" (263) 12 13
IDENTIFIER (264) 7 12 13 18 23 25 30 37 40
NUMLIT (265) 1 39
"<-" (266) 14 22
".." (267) 38
"version" (268) 1


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
module (29)
    on left: 1, on right: 0
module_stmt_list (30)
    on left: 2 3, on right: 1 2
module_stmt (31)
    on left: 4 5 6, on right: 2
device_type (32)
    on left: 7, on right: 4
device_type_body (33)
    on left: 8 9, on right: 7 8
device_type_body_stmt (34)
    on left: 10 11 12 13 14 15 16, on right: 8
device (35)
    on left: 17 18, on right: 5 15
device_body (36)
    on left: 19 20, on right: 17 18 19
device_body_stmt (37)
    on left: 21 22, on right: 19
channel_name (38)
    on left: 23 24, on right: 10 11
l_expr (39)
    on left: 25 26 27 28 29, on right: 14 17 18 21 22 27 28 29 31 33
type_decl (40)
    on left: 30, on right: 6 16
type (41)
    on left: 31 32 33 34, on right: 10 11 12 13 30
enum_list (42)
    on left: 35 36, on right: 34 36
enum_label (43)
    on left: 37, on right: 35 36
range (44)
    on left: 38, on right: 29 33 47
expr (45)
    on left: 39 40 41 42 43 44 45 46 47, on right: 13 21 28 38 41 42
    43 44 45 46 47


State 0

    0 $accept: . module END
    1 module: . "version" NUMLIT '.' NUMLIT '.' NUMLIT ';' module_stmt_list

    "version"  shift, and go to state 1

    module  go to state 2


State 1

    1 module: "version" . NUMLIT '.' NUMLIT '.' NUMLIT ';' module_stmt_list

    NUMLIT  shift, and go to state 3


State 2

    0 $accept: module . END

    END  shift, and go to state 4


State 3

    1 module: "version" NUMLIT . '.' NUMLIT '.' NUMLIT ';' module_stmt_list

    '.'  shift, and go to state 5


State 4

    0 $accept: module END .

    $default  accept


State 5

    1 module: "version" NUMLIT '.' . NUMLIT '.' NUMLIT ';' module_stmt_list

    NUMLIT  shift, and go to state 6


State 6

    1 module: "version" NUMLIT '.' NUMLIT . '.' NUMLIT ';' module_stmt_list

    '.'  shift, and go to state 7


State 7

    1 module: "version" NUMLIT '.' NUMLIT '.' . NUMLIT ';' module_stmt_list

    NUMLIT  shift, and go to state 8


State 8

    1 module: "version" NUMLIT '.' NUMLIT '.' NUMLIT . ';' module_stmt_list

    ';'  shift, and go to state 9


State 9

    1 module: "version" NUMLIT '.' NUMLIT '.' NUMLIT ';' . module_stmt_list
    2 module_stmt_list: . module_stmt_list module_stmt
    3                 | . %empty

    $default  reduce using rule 3 (module_stmt_list)

    module_stmt_list  go to state 10


State 10

    1 module: "version" NUMLIT '.' NUMLIT '.' NUMLIT ';' module_stmt_list .  [END]
    2 module_stmt_list: module_stmt_list . module_stmt
    4 module_stmt: . device_type
    5            | . device
    6            | . type_decl
    7 device_type: . "device_type" IDENTIFIER '{' device_type_body '}'
   17 device: . "device" l_expr '{' device_body '}'
   18       | . "device" l_expr IDENTIFIER '{' device_body '}'
   30 type_decl: . "type" IDENTIFIER '=' type ';'

    "device_type"  shift, and go to state 11
    "device"       shift, and go to state 12
    "type"         shift, and go to state 13

    $default  reduce using rule 1 (module)

    module_stmt  go to state 14
    device_type  go to state 15
    device       go to state 16
    type_decl    go to state 17


State 11

    7 device_type: "device_type" . IDENTIFIER '{' device_type_body '}'

    IDENTIFIER  shift, and go to state 18


State 12

   17 device: "device" . l_expr '{' device_body '}'
   18       | "device" . l_expr IDENTIFIER '{' device_body '}'
   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'

    IDENTIFIER  shift, and go to state 19
    '_'         shift, and go to state 20

    l_expr  go to state 21


State 13

   30 type_decl: "type" . IDENTIFIER '=' type ';'

    IDENTIFIER  shift, and go to state 22


State 14

    2 module_stmt_list: module_stmt_list module_stmt .

    $default  reduce using rule 2 (module_stmt_list)


State 15

    4 module_stmt: device_type .

    $default  reduce using rule 4 (module_stmt)


State 16

    5 module_stmt: device .

    $default  reduce using rule 5 (module_stmt)


State 17

    6 module_stmt: type_decl .

    $default  reduce using rule 6 (module_stmt)


State 18

    7 device_type: "device_type" IDENTIFIER . '{' device_type_body '}'

    '{'  shift, and go to state 23


State 19

   25 l_expr: IDENTIFIER .

    $default  reduce using rule 25 (l_expr)


State 20

   26 l_expr: '_' .

    $default  reduce using rule 26 (l_expr)


State 21

   17 device: "device" l_expr . '{' device_body '}'
   18       | "device" l_expr . IDENTIFIER '{' device_body '}'
   27 l_expr: l_expr . '.' l_expr
   28       | l_expr . '[' expr ']'
   29       | l_expr . '[' range ']'

    IDENTIFIER  shift, and go to state 24
    '.'         shift, and go to state 25
    '['         shift, and go to state 26
    '{'         shift, and go to state 27


State 22

   30 type_decl: "type" IDENTIFIER . '=' type ';'

    '='  shift, and go to state 28


State 23

    7 device_type: "device_type" IDENTIFIER '{' . device_type_body '}'
    8 device_type_body: . device_type_body device_type_body_stmt
    9                 | . %empty

    $default  reduce using rule 9 (device_type_body)

    device_type_body  go to state 29


State 24

   18 device: "device" l_expr IDENTIFIER . '{' device_body '}'

    '{'  shift, and go to state 30


State 25

   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   27       | l_expr '.' . l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'

    IDENTIFIER  shift, and go to state 19
    '_'         shift, and go to state 20

    l_expr  go to state 31


State 26

   28 l_expr: l_expr '[' . expr ']'
   29       | l_expr '[' . range ']'
   38 range: . expr ".." expr
   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    range  go to state 34
    expr   go to state 35


State 27

   17 device: "device" l_expr '{' . device_body '}'
   19 device_body: . device_body device_body_stmt
   20            | . %empty

    $default  reduce using rule 20 (device_body)

    device_body  go to state 36


State 28

   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'
   30 type_decl: "type" IDENTIFIER '=' . type ';'
   31 type: . l_expr
   32     | . "type"
   33     | . l_expr '{' range '}'
   34     | . '{' enum_list '}'

    "type"      shift, and go to state 37
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 38
    '_'         shift, and go to state 20

    l_expr  go to state 39
    type    go to state 40


State 29

    7 device_type: "device_type" IDENTIFIER '{' device_type_body . '}'
    8 device_type_body: device_type_body . device_type_body_stmt
   10 device_type_body_stmt: . "input" channel_name ':' type ';'
   11                      | . "output" channel_name ':' type ';'
   12                      | . "attr" IDENTIFIER ':' type ';'
   13                      | . "attr" IDENTIFIER ':' type '=' expr ';'
   14                      | . l_expr "<-" l_expr ';'
   15                      | . device
   16                      | . type_decl
   17 device: . "device" l_expr '{' device_body '}'
   18       | . "device" l_expr IDENTIFIER '{' device_body '}'
   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'
   30 type_decl: . "type" IDENTIFIER '=' type ';'

    "device"    shift, and go to state 12
    "type"      shift, and go to state 13
    "input"     shift, and go to state 41
    "output"    shift, and go to state 42
    "attr"      shift, and go to state 43
    IDENTIFIER  shift, and go to state 19
    '}'         shift, and go to state 44
    '_'         shift, and go to state 20

    device_type_body_stmt  go to state 45
    device                 go to state 46
    l_expr                 go to state 47
    type_decl              go to state 48


State 30

   18 device: "device" l_expr IDENTIFIER '{' . device_body '}'
   19 device_body: . device_body device_body_stmt
   20            | . %empty

    $default  reduce using rule 20 (device_body)

    device_body  go to state 49


State 31

   27 l_expr: l_expr . '.' l_expr
   27       | l_expr '.' l_expr .  [IDENTIFIER, "<-", '.', '[', '{', ';', '=']
   28       | l_expr . '[' expr ']'
   29       | l_expr . '[' range ']'

    $default  reduce using rule 27 (l_expr)

    Conflict between rule 27 and token '.' resolved as reduce (%left '.').
    Conflict between rule 27 and token '[' resolved as reduce (%left '[').


State 32

   40 expr: IDENTIFIER .

    $default  reduce using rule 40 (expr)


State 33

   39 expr: NUMLIT .

    $default  reduce using rule 39 (expr)


State 34

   29 l_expr: l_expr '[' range . ']'

    ']'  shift, and go to state 50


State 35

   28 l_expr: l_expr '[' expr . ']'
   38 range: expr . ".." expr
   41 expr: expr . '.' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    ".."  shift, and go to state 51
    '+'   shift, and go to state 52
    '-'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '.'   shift, and go to state 56
    '['   shift, and go to state 57
    ']'   shift, and go to state 58


State 36

   17 device: "device" l_expr '{' device_body . '}'
   19 device_body: device_body . device_body_stmt
   21 device_body_stmt: . l_expr '=' expr ';'
   22                 | . l_expr "<-" l_expr ';'
   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'

    IDENTIFIER  shift, and go to state 19
    '}'         shift, and go to state 59
    '_'         shift, and go to state 20

    device_body_stmt  go to state 60
    l_expr            go to state 61


State 37

   32 type: "type" .

    $default  reduce using rule 32 (type)


State 38

   34 type: '{' . enum_list '}'
   35 enum_list: . enum_label
   36          | . enum_list ',' enum_label
   37 enum_label: . IDENTIFIER

    IDENTIFIER  shift, and go to state 62

    enum_list   go to state 63
    enum_label  go to state 64


State 39

   27 l_expr: l_expr . '.' l_expr
   28       | l_expr . '[' expr ']'
   29       | l_expr . '[' range ']'
   31 type: l_expr .  [';', '=']
   33     | l_expr . '{' range '}'

    '.'  shift, and go to state 25
    '['  shift, and go to state 26
    '{'  shift, and go to state 65

    $default  reduce using rule 31 (type)


State 40

   30 type_decl: "type" IDENTIFIER '=' type . ';'

    ';'  shift, and go to state 66


State 41

   10 device_type_body_stmt: "input" . channel_name ':' type ';'
   23 channel_name: . IDENTIFIER
   24             | . '_'

    IDENTIFIER  shift, and go to state 67
    '_'         shift, and go to state 68

    channel_name  go to state 69


State 42

   11 device_type_body_stmt: "output" . channel_name ':' type ';'
   23 channel_name: . IDENTIFIER
   24             | . '_'

    IDENTIFIER  shift, and go to state 67
    '_'         shift, and go to state 68

    channel_name  go to state 70


State 43

   12 device_type_body_stmt: "attr" . IDENTIFIER ':' type ';'
   13                      | "attr" . IDENTIFIER ':' type '=' expr ';'

    IDENTIFIER  shift, and go to state 71


State 44

    7 device_type: "device_type" IDENTIFIER '{' device_type_body '}' .

    $default  reduce using rule 7 (device_type)


State 45

    8 device_type_body: device_type_body device_type_body_stmt .

    $default  reduce using rule 8 (device_type_body)


State 46

   15 device_type_body_stmt: device .

    $default  reduce using rule 15 (device_type_body_stmt)


State 47

   14 device_type_body_stmt: l_expr . "<-" l_expr ';'
   27 l_expr: l_expr . '.' l_expr
   28       | l_expr . '[' expr ']'
   29       | l_expr . '[' range ']'

    "<-"  shift, and go to state 72
    '.'   shift, and go to state 25
    '['   shift, and go to state 26


State 48

   16 device_type_body_stmt: type_decl .

    $default  reduce using rule 16 (device_type_body_stmt)


State 49

   18 device: "device" l_expr IDENTIFIER '{' device_body . '}'
   19 device_body: device_body . device_body_stmt
   21 device_body_stmt: . l_expr '=' expr ';'
   22                 | . l_expr "<-" l_expr ';'
   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'

    IDENTIFIER  shift, and go to state 19
    '}'         shift, and go to state 73
    '_'         shift, and go to state 20

    device_body_stmt  go to state 60
    l_expr            go to state 61


State 50

   29 l_expr: l_expr '[' range ']' .

    $default  reduce using rule 29 (l_expr)


State 51

   38 range: expr ".." . expr
   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    expr  go to state 74


State 52

   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   42     | expr '+' . expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    expr  go to state 75


State 53

   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   43     | expr '-' . expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    expr  go to state 76


State 54

   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   44     | expr '*' . expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    expr  go to state 77


State 55

   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   45     | expr '/' . expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    expr  go to state 78


State 56

   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   41     | expr '.' . expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    expr  go to state 79


State 57

   38 range: . expr ".." expr
   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   46     | expr '[' . expr ']'
   47     | . expr '[' range ']'
   47     | expr '[' . range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    range  go to state 80
    expr   go to state 81


State 58

   28 l_expr: l_expr '[' expr ']' .

    $default  reduce using rule 28 (l_expr)


State 59

   17 device: "device" l_expr '{' device_body '}' .

    $default  reduce using rule 17 (device)


State 60

   19 device_body: device_body device_body_stmt .

    $default  reduce using rule 19 (device_body)


State 61

   21 device_body_stmt: l_expr . '=' expr ';'
   22                 | l_expr . "<-" l_expr ';'
   27 l_expr: l_expr . '.' l_expr
   28       | l_expr . '[' expr ']'
   29       | l_expr . '[' range ']'

    "<-"  shift, and go to state 82
    '.'   shift, and go to state 25
    '['   shift, and go to state 26
    '='   shift, and go to state 83


State 62

   37 enum_label: IDENTIFIER .

    $default  reduce using rule 37 (enum_label)


State 63

   34 type: '{' enum_list . '}'
   36 enum_list: enum_list . ',' enum_label

    '}'  shift, and go to state 84
    ','  shift, and go to state 85


State 64

   35 enum_list: enum_label .

    $default  reduce using rule 35 (enum_list)


State 65

   33 type: l_expr '{' . range '}'
   38 range: . expr ".." expr
   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    range  go to state 86
    expr   go to state 87


State 66

   30 type_decl: "type" IDENTIFIER '=' type ';' .

    $default  reduce using rule 30 (type_decl)


State 67

   23 channel_name: IDENTIFIER .

    $default  reduce using rule 23 (channel_name)


State 68

   24 channel_name: '_' .

    $default  reduce using rule 24 (channel_name)


State 69

   10 device_type_body_stmt: "input" channel_name . ':' type ';'

    ':'  shift, and go to state 88


State 70

   11 device_type_body_stmt: "output" channel_name . ':' type ';'

    ':'  shift, and go to state 89


State 71

   12 device_type_body_stmt: "attr" IDENTIFIER . ':' type ';'
   13                      | "attr" IDENTIFIER . ':' type '=' expr ';'

    ':'  shift, and go to state 90


State 72

   14 device_type_body_stmt: l_expr "<-" . l_expr ';'
   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'

    IDENTIFIER  shift, and go to state 19
    '_'         shift, and go to state 20

    l_expr  go to state 91


State 73

   18 device: "device" l_expr IDENTIFIER '{' device_body '}' .

    $default  reduce using rule 18 (device)


State 74

   38 range: expr ".." expr .  ['}', ']']
   41 expr: expr . '.' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '.'  shift, and go to state 56
    '['  shift, and go to state 57

    $default  reduce using rule 38 (range)


State 75

   41 expr: expr . '.' expr
   42     | expr . '+' expr
   42     | expr '+' expr .  ["..", '+', '-', ';', '}', ']']
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '.'  shift, and go to state 56
    '['  shift, and go to state 57

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token '+' resolved as reduce (%left '+').
    Conflict between rule 42 and token '-' resolved as reduce (%left '-').
    Conflict between rule 42 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 42 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 42 and token '.' resolved as shift ('+' < '.').
    Conflict between rule 42 and token '[' resolved as shift ('+' < '[').


State 76

   41 expr: expr . '.' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   43     | expr '-' expr .  ["..", '+', '-', ';', '}', ']']
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '.'  shift, and go to state 56
    '['  shift, and go to state 57

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token '+' resolved as reduce (%left '+').
    Conflict between rule 43 and token '-' resolved as reduce (%left '-').
    Conflict between rule 43 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 43 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 43 and token '.' resolved as shift ('-' < '.').
    Conflict between rule 43 and token '[' resolved as shift ('-' < '[').


State 77

   41 expr: expr . '.' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   44     | expr '*' expr .  ["..", '+', '-', '*', '/', ';', '}', ']']
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    '.'  shift, and go to state 56
    '['  shift, and go to state 57

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 44 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 44 and token '*' resolved as reduce (%left '*').
    Conflict between rule 44 and token '/' resolved as reduce (%left '/').
    Conflict between rule 44 and token '.' resolved as shift ('*' < '.').
    Conflict between rule 44 and token '[' resolved as shift ('*' < '[').


State 78

   41 expr: expr . '.' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   45     | expr '/' expr .  ["..", '+', '-', '*', '/', ';', '}', ']']
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    '.'  shift, and go to state 56
    '['  shift, and go to state 57

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 45 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 45 and token '*' resolved as reduce (%left '*').
    Conflict between rule 45 and token '/' resolved as reduce (%left '/').
    Conflict between rule 45 and token '.' resolved as shift ('/' < '.').
    Conflict between rule 45 and token '[' resolved as shift ('/' < '[').


State 79

   41 expr: expr . '.' expr
   41     | expr '.' expr .  ["..", '+', '-', '*', '/', '.', '[', ';', '}', ']']
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token '+' resolved as reduce ('+' < '.').
    Conflict between rule 41 and token '-' resolved as reduce ('-' < '.').
    Conflict between rule 41 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 41 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 41 and token '.' resolved as reduce (%left '.').
    Conflict between rule 41 and token '[' resolved as reduce (%left '[').


State 80

   47 expr: expr '[' range . ']'

    ']'  shift, and go to state 92


State 81

   38 range: expr . ".." expr
   41 expr: expr . '.' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   46     | expr '[' expr . ']'
   47     | expr . '[' range ']'

    ".."  shift, and go to state 51
    '+'   shift, and go to state 52
    '-'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '.'   shift, and go to state 56
    '['   shift, and go to state 57
    ']'   shift, and go to state 93


State 82

   22 device_body_stmt: l_expr "<-" . l_expr ';'
   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'

    IDENTIFIER  shift, and go to state 19
    '_'         shift, and go to state 20

    l_expr  go to state 94


State 83

   21 device_body_stmt: l_expr '=' . expr ';'
   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    expr  go to state 95


State 84

   34 type: '{' enum_list '}' .

    $default  reduce using rule 34 (type)


State 85

   36 enum_list: enum_list ',' . enum_label
   37 enum_label: . IDENTIFIER

    IDENTIFIER  shift, and go to state 62

    enum_label  go to state 96


State 86

   33 type: l_expr '{' range . '}'

    '}'  shift, and go to state 97


State 87

   38 range: expr . ".." expr
   41 expr: expr . '.' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    ".."  shift, and go to state 51
    '+'   shift, and go to state 52
    '-'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '.'   shift, and go to state 56
    '['   shift, and go to state 57


State 88

   10 device_type_body_stmt: "input" channel_name ':' . type ';'
   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'
   31 type: . l_expr
   32     | . "type"
   33     | . l_expr '{' range '}'
   34     | . '{' enum_list '}'

    "type"      shift, and go to state 37
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 38
    '_'         shift, and go to state 20

    l_expr  go to state 39
    type    go to state 98


State 89

   11 device_type_body_stmt: "output" channel_name ':' . type ';'
   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'
   31 type: . l_expr
   32     | . "type"
   33     | . l_expr '{' range '}'
   34     | . '{' enum_list '}'

    "type"      shift, and go to state 37
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 38
    '_'         shift, and go to state 20

    l_expr  go to state 39
    type    go to state 99


State 90

   12 device_type_body_stmt: "attr" IDENTIFIER ':' . type ';'
   13                      | "attr" IDENTIFIER ':' . type '=' expr ';'
   25 l_expr: . IDENTIFIER
   26       | . '_'
   27       | . l_expr '.' l_expr
   28       | . l_expr '[' expr ']'
   29       | . l_expr '[' range ']'
   31 type: . l_expr
   32     | . "type"
   33     | . l_expr '{' range '}'
   34     | . '{' enum_list '}'

    "type"      shift, and go to state 37
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 38
    '_'         shift, and go to state 20

    l_expr  go to state 39
    type    go to state 100


State 91

   14 device_type_body_stmt: l_expr "<-" l_expr . ';'
   27 l_expr: l_expr . '.' l_expr
   28       | l_expr . '[' expr ']'
   29       | l_expr . '[' range ']'

    '.'  shift, and go to state 25
    '['  shift, and go to state 26
    ';'  shift, and go to state 101


State 92

   47 expr: expr '[' range ']' .

    $default  reduce using rule 47 (expr)


State 93

   46 expr: expr '[' expr ']' .

    $default  reduce using rule 46 (expr)


State 94

   22 device_body_stmt: l_expr "<-" l_expr . ';'
   27 l_expr: l_expr . '.' l_expr
   28       | l_expr . '[' expr ']'
   29       | l_expr . '[' range ']'

    '.'  shift, and go to state 25
    '['  shift, and go to state 26
    ';'  shift, and go to state 102


State 95

   21 device_body_stmt: l_expr '=' expr . ';'
   41 expr: expr . '.' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '.'  shift, and go to state 56
    '['  shift, and go to state 57
    ';'  shift, and go to state 103


State 96

   36 enum_list: enum_list ',' enum_label .

    $default  reduce using rule 36 (enum_list)


State 97

   33 type: l_expr '{' range '}' .

    $default  reduce using rule 33 (type)


State 98

   10 device_type_body_stmt: "input" channel_name ':' type . ';'

    ';'  shift, and go to state 104


State 99

   11 device_type_body_stmt: "output" channel_name ':' type . ';'

    ';'  shift, and go to state 105


State 100

   12 device_type_body_stmt: "attr" IDENTIFIER ':' type . ';'
   13                      | "attr" IDENTIFIER ':' type . '=' expr ';'

    ';'  shift, and go to state 106
    '='  shift, and go to state 107


State 101

   14 device_type_body_stmt: l_expr "<-" l_expr ';' .

    $default  reduce using rule 14 (device_type_body_stmt)


State 102

   22 device_body_stmt: l_expr "<-" l_expr ';' .

    $default  reduce using rule 22 (device_body_stmt)


State 103

   21 device_body_stmt: l_expr '=' expr ';' .

    $default  reduce using rule 21 (device_body_stmt)


State 104

   10 device_type_body_stmt: "input" channel_name ':' type ';' .

    $default  reduce using rule 10 (device_type_body_stmt)


State 105

   11 device_type_body_stmt: "output" channel_name ':' type ';' .

    $default  reduce using rule 11 (device_type_body_stmt)


State 106

   12 device_type_body_stmt: "attr" IDENTIFIER ':' type ';' .

    $default  reduce using rule 12 (device_type_body_stmt)


State 107

   13 device_type_body_stmt: "attr" IDENTIFIER ':' type '=' . expr ';'
   39 expr: . NUMLIT
   40     | . IDENTIFIER
   41     | . expr '.' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '[' expr ']'
   47     | . expr '[' range ']'

    IDENTIFIER  shift, and go to state 32
    NUMLIT      shift, and go to state 33

    expr  go to state 108


State 108

   13 device_type_body_stmt: "attr" IDENTIFIER ':' type '=' expr . ';'
   41 expr: expr . '.' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '[' expr ']'
   47     | expr . '[' range ']'

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '.'  shift, and go to state 56
    '['  shift, and go to state 57
    ';'  shift, and go to state 109


State 109

   13 device_type_body_stmt: "attr" IDENTIFIER ':' type '=' expr ';' .

    $default  reduce using rule 13 (device_type_body_stmt)
